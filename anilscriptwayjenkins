def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }
  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node{
def mavenhome = tool name: "maven3.8.5"

echo "the node number is: ${env.NODE_NAME}"
echo "the job number is:  ${env.JOB_NAME}"
echo "the build number is: ${env.BUILD_NUMBER}"

try{
//checking code
stage('checking code'){
sendSlackNotifications('STARTED')

git branch: 'development', credentialsId: '83c404e6-551a-4d4d-878b-2e28b01e0b3f', url: 'https://github.com/anil-devops-training/maven-web-application.git'
}

//build 
stage('build'){
sh "$mavenhome/bin/mvn clean package"
}
/*
//creating sonarqube report
stage('creating sonarqube report'){
    sh "$mavenhome/bin/mvn sonar:sonar"
}

// updating artifact in to nexus
stage('updating artifact in to naxus'){
sh "$mavenhome/bin/mvn deploy"    
}

//uploading artifact into tomcat
stage('uploading artifact into tomcat'){
sshagent(['2b790511-739d-4954-becf-eeebf134cd92']){
 sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.111.168.108:/opt/apache-tomcat-9.0.59/webapps"
}
}
*/

}//try block closing

catch(e){
currentBuild.result = "FAILED"
}

finally{
sendSlackNotifications(currentBuild.result)
}
} //nodeclosing
